//Ben Betchley

//7. Write a recursive function (pseudocode and code) to check if a number n is prime.

//This program works by working out if a number inputted by the user is modulus 2 equals 1 or the number
//equals 2, if so 1 is returned, else another if statement is run; if number modulus 2 equals 0 return 0,
//else the parameters are updated with the number, and 2 + 1. The main function calls the function prime,
//sum takes the value of the prime function. if sum equals 1 a message is print to the screen saying this
//is a prime, else any other condition this is not a prime.


#include <iostream>

using namespace std;
//The prime function is defined and carries the parameters n and d to call the values 
//from another function, n being the number input and d being the value of 2.
int prime(int n, int d) {
//if statement used to check whether n is a prime, if so returning 1.
	if (n > d)
	{
		if (n % d == 1 || n == d)
		{
			return 1;
		}
//if not, an else statement runs, if n modulus 2 equal 0, then return 0 else prime takes the parameters n and 2+1.
		else
		{
			if (n % d == 0)
			{
				return 0;
			}
			else
			{
				prime(n, d++);
			}
		}
	}
}

int main() {
//n is defined, the user is asked to input a number to this variable.
	int n;

	cout << " Enter a number: " << endl;
	cin >> n;
//runs the prime function, if sum equals 1 then a message is output to the user saying this is prime.
	int sum = prime(n, 2);

	if (sum == 1)
	{
		cout << "This number is a prime number" << endl;
	}
//any other condition a message is output to the user saying this is not prime.
	else
	{
		cout << "This is not a prime number" << endl;
	}
	system("pause");
}

//PSEUDOCODE
/*
PRIME(Number, 2)
IF Number > 2
IF NUMBER MOD 2 = 1 OR NUMBER = 2
RETURN 1
ELSE
IF NUMBER MOD 2 = 0
RETURN 0
ELSE
PRIME(NUMBER, 2+1)

MAIN
OUTPUT = "ENTER A NUMBER"
INPUT <- NUMBER


SUM <- PRIME(NUMBER, 2)

IF (SUM = 1)
OUTPUT = "THIS IS PRIME"
ELSE
OUTPUT = "THIS IS NOT PRIME"
*/
