//Ben Betchley

//Question 4. Look back at last week's tasks. Describe the run-time bounds of these algorithms using Big
//O notation.

	Question 1.

#include <iostream>
#include <cstdlib>
#include <ctime>
#include <array>

using namespace std;

int main() {

	array<int, 8> rArray = { 5,3,8,6,1,9,2,7 };					 //1
	int n;										 //1

	srand(time(0));									 //1

	for (int i = 0; i < 8; i++) {						         //n

		int r = rand() % 8;
		int swap = rArray[i]; rArray[i] = rArray[r];  rArray[r] = swap;

	}
	
	for (int c = 0; c < rArray.size(); c++) {				       	 //n

		cout << rArray[c] << " " << endl;
	}

		system("pause");							 //1
}

/*
	1 + 1 + 1 + n + n + 1 = 2n + 4 = O (n)
*/

	Question 2.


#include <iostream>

using namespace std;

int TZ(int  n) {

	int sum = 0;									 //1

	for (int i = 5; n / i >= 1; i = i * 5)						 //n
		sum = sum + n / i;

	return sum;									 //1
}

int main() {

		int n ;									 //1
		cout << "Please enter a number: ";					 //1
		cin >> n;								 //1
		cout << "Number of trailing numbers is:  " << TZ(n)<<endl;		 //1
		system("pause");							 //1
		return 0;								 //1
}

/*
	1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + n = n + 8 = O (n)
*/
